{"version":3,"file":"static/js/85.f1fbe6eb.chunk.js","mappings":"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","sources":["../node_modules/uuid/dist/esm-browser/rng.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/react-transition-group/esm/utils/ChildMapping.js","../node_modules/react-transition-group/esm/TransitionGroup.js","webpack://goit-react-hw-08-phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/transitions.module.css?292f","components/ContactList/ContactList.js","views/ContactsView.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactFormItem\":\"ContactForm_contactFormItem__hO2j7\",\"contactBtn\":\"ContactForm_contactBtn__Hbm5v\"};","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport contactsOperations from '../../redux/contacts/contactsOperations'\nimport styles from './ContactForm.module.css'\n\nclass ContactForm extends Component{\n\n    state={\n        name:'',\n        number:''\n    }\n\n    handleChange= e => {\n        const {name, value } = e.target\n            this.setState({[name]:value})\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        const {name,number} = this.state\n        if (name && number){\n        this.props.onAddContact(name,number)\n        this.setState({name:'', number:''})\n        } \n    }\n\n    render(){\n        const {name, number} = this.state\n        return(\n            <>\n            \n            <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n            <label \n                htmlFor='name'\n                className={styles.contactFormItem}\n\n                >Name</label>\n            <input\n                className={styles.contactFormItem}\n                type='text'\n                id='name'\n                name='name'\n                value={name}\n                onChange={this.handleChange}\n                \n            />\n            <label \n                htmlFor='phone'\n                className={styles.contactFormItem}\n            >Phone</label>\n\n            <input\n            className={styles.contactFormItem}\n            type='text'\n            id='phone'\n            name='number'\n            value={number}\n            onChange={this.handleChange}\n            />\n\n            <button \n            className={styles.contactBtn}\n            >Add contact</button>\n\n            </form>\n            </>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    onAddContact: contactsOperations.addContact\n}\n\nexport default connect(null,mapDispatchToProps)(ContactForm)","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterName\":\"Filter_filterName__Y2kKA\",\"filterField\":\"Filter_filterField__hjFfe\"};","import React from 'react'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport contactsActions from '../../redux/contacts/contactsActions'\nimport styles from './Filter.module.css'\nimport contactsSelectors from '../../redux/contacts/contactsSelectors'\n\nconst Filter = ({value, onChangeFilter}) =>(\n    <div className={styles.filterContainer}>\n    <label className={styles.filterName} htmlFor='filter'>Find contacts by name</label>\n    <input\n    className={styles.filterField}\n    type='text'\n    value={value}\n    onChange={e=> onChangeFilter(e.target.value)}\n    id='filter'/>\n    </div>\n)\n\nconst mapStateToProps = (state) =>({\n    value: contactsSelectors.getFilter(state)\n})\n\nconst mapDispatchToProps = {\n    onChangeFilter: contactsActions.changeFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChangeFilter: PropTypes.func\n}","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__4zmlP\",\"button\":\"Contact_button__F+kJb\"};","import React from 'react'\nimport styles from './Contact.module.css'\nimport {connect} from 'react-redux'\nimport contactsOperations from '../../redux/contacts/contactsOperations'\nimport PropTypes from 'prop-types';\nimport contactsSelectors from '../../redux/contacts/contactsSelectors'\n\nconst Contact = ({name,number , onRemove}) => {\n    // console.log('Comtact re-render', name)\n    return(\n    <li className={styles.contact}>\n    <p className={styles.contactData}>{name}</p>\n    <p className={styles.contactData}>{number}</p>\n    <button \n    className={styles.button} \n    onClick={onRemove}\n    >X</button>\n    </li>\n    \n    )}\n\nconst mapStateToProps = (state,ownProps) => {\n    const contact = contactsSelectors.getContactById(state, ownProps.id)\n \n return {...contact}\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) =>({\n    onRemove: () => dispatch(contactsOperations.removeContact(ownProps.id))\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Contact);\n\nContact.propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    onRemove: PropTypes.func\n}","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contact\":\"ContactList_contact__0STHS\",\"button\":\"ContactList_button__7kL4l\"};","// extracted by mini-css-extract-plugin\nexport default {\"enter\":\"transitions_enter__qLqdY\",\"enterActive\":\"transitions_enterActive__G9f8+\",\"exit\":\"transitions_exit__Nylr9\",\"exitActive\":\"transitions_exitActive__kr47r\"};","import React from 'react'\nimport {connect} from 'react-redux'\nimport { v4 as uuidv4 } from 'uuid';\nimport { CSSTransition , TransitionGroup} from 'react-transition-group'\n// import PropTypes from 'prop-types';\nimport Contact from '../Contact/Contact'\nimport styles from './ContactList.module.css'\nimport transitions from './transitions.module.css'\nimport contactsSelectors from '../../redux/contacts/contactsSelectors'\n\nconst ContactList = ({contacts}) => {\n    return(\n    <TransitionGroup component='ul' className={styles.contactList}>\n    {contacts.map(contact => \n        \n    <CSSTransition \n        classNames={transitions}\n        timeout={200}\n        key={uuidv4()}> \n        \n        <Contact id={contact.id}/>\n       \n    </CSSTransition> )}\n    </TransitionGroup>\n    )\n}\n\nconst mapStateToProps = (state) =>{\n    return ({ contacts: contactsSelectors.getVisibleContacts(state) })\n}\n\nexport default connect(mapStateToProps)(ContactList);\n\n// ContactList.propTypes = {\n//     contacts: PropTypes.shape(PropTypes.string.isRequired),\n\n// }","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {contactsOperations, contactsSelectors} from '../redux/contacts'\nimport {authSelectors} from '../redux/auth'\nimport Logo from '../components/Logo/Logo'\nimport ContactForm from '../components/ContactForm/ContactForm'\nimport Filter from '../components/Filter/Filter'\nimport ContactList from '../components/ContactList/ContactList'\n\n\nclass ContactsView extends Component {\n    componentDidMount(){\n      if(!this.props.isAuthenticated){\n        this.props.history.replace('/login')\n        return\n      }\n        this.props.onFetchContacts();\n      }\n    componentDidUpdate(){\n      if(!this.props.isAuthenticated){\n        this.props.history.replace('/login')\n        return\n      }\n    }  \n    render(){\n    return(\n    <>\n        <Logo name={'Phonebook'}/>\n        <ContactForm/>\n        <Filter/>\n        <ContactList/>\n    </>)}\n}\n\nconst mapStateToProps = state => ({\n    isLoadingContacts: contactsSelectors.getLoading(state),\n    isAuthenticated: authSelectors.isAuthenticated(state)\n  })\n  \n  const mapDispatchToProps = {\n    onFetchContacts: contactsOperations.fetchContacts,\n    \n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView)"],"names":["getRandomValues","ContactForm","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","name","number","handleChange","e","_e$target","target","value","setState","_defineProperty","handleSubmit","preventDefault","_this$state","props","onAddContact","_createClass","key","_this$state2","this","_jsx","_Fragment","children","_jsxs","className","styles","onSubmit","htmlFor","type","id","onChange","Component","mapDispatchToProps","contactsOperations","connect","onChangeFilter","contactsActions","contactsSelectors","_ref","randomUUID","crypto","bind","rnds8","Uint8Array","rng","Error","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","undefined","options","buf","native","rnds","random","getChildMapping","mapFn","result","Object","create","Children","c","forEach","child","isValidElement","mapper","getProp","prop","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","childMapping","nextKey","pendingNextKey","mergeChildMappings","keys","hasPrev","hasNext","prevChild","isLeaving","in","cloneElement","exit","enter","values","obj","map","k","TransitionGroup","_React$Component","context","handleExited","_assertThisInitialized","contextValue","isMounting","firstRender","_inheritsLoose","_proto","prototype","componentDidMount","mounted","componentWillUnmount","getDerivedStateFromProps","appear","node","currentChildMapping","_extends","render","_this$props","component","childFactory","_objectWithoutPropertiesLoose","React","TransitionGroupContext","propTypes","defaultProps","ownProps","contact","_objectSpread","dispatch","onRemove","onClick","contacts","CSSTransition","classNames","transitions","timeout","Contact","uuidv4","ContactsView","isAuthenticated","onFetchContacts","history","replace","Logo","Filter","ContactList","isLoadingContacts","authSelectors"],"sourceRoot":""}