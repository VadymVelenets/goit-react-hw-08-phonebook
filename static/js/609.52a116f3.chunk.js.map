{"version":3,"file":"static/js/609.52a116f3.chunk.js","mappings":"0PACA,EAA0B,2BAA1B,EAA6D,yBAA7D,EAA8F,yBAA9F,EAA+H,yBAA/H,EAAiK,0B,SCKlJ,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,CAAEC,MAAO,GAAIC,SAAU,KAAKC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAtDM,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEdI,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAME,cAAtBC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACdN,GAAQ,SAAAO,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAQ,IAAAE,EAAAA,EAAAA,GAAA,GAAGJ,EAAOC,GAAK,GACnD,EAQQX,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAEf,OACEc,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAC,0CAC7BH,EAAAA,EAAAA,MAAA,QAAMK,SAXW,SAAAb,GACnBA,EAAMc,iBACNzB,EAAS0B,EAAAA,GAAAA,OAAoBT,EAAAA,EAAAA,GAAC,CAAC,EAAIT,KACnCC,EAAQ,CAAEL,MAAO,GAAIC,SAAU,IACjC,EAOiCiB,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAaC,SAAA,CAAC,SAE9BC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXM,KAAK,QACLb,KAAK,QACLc,QAAQ,mDACRC,MAAM,mBACNC,YAAY,wBACZC,UAAQ,EACRhB,MAAOX,EACP4B,SAAUtB,QAGdS,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAaC,SAAA,CAAC,YAE9BC,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXM,KAAK,WACLb,KAAK,WACLe,MAAM,sBACNE,UAAQ,EACRhB,MAAOV,EACP2B,SAAUtB,QAGda,EAAAA,EAAAA,KAAA,UAAQI,KAAK,SAASP,UAAWC,EAAcC,SAAC,gBAMxD,C","sources":["webpack://goit-react-hw-08-phonebook/./src/views/LoginView/LoginView.module.css?c53e","views/LoginView/LoginView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"LoginView_section__TOjXP\",\"title\":\"LoginView_title__tecUg\",\"label\":\"LoginView_label__KKGkH\",\"input\":\"LoginView_input__QNJd1\",\"button\":\"LoginView_button__FJrpm\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\n\nimport styles from './LoginView.module.css';\n\nexport default function LoginView() {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({ email: '', password: '' });\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setForm(prevForm => ({ ...prevForm, [name]: value }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.logIn({ ...form }));\n    setForm({ email: '', password: '' });\n  };\n\n  const { email, password } = form;\n\n  return (\n    <div className={styles.section}>\n      <h2 className={styles.title}>Please enter your email and password</h2>\n      <form onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          Email\n          <input\n            className={styles.input}\n            type=\"email\"\n            name=\"email\"\n            pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n            title=\"Enter your email\"\n            placeholder=\"Example user@mail.com\"\n            required\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Password\n          <input\n            className={styles.input}\n            type=\"password\"\n            name=\"password\"\n            title=\"Enter your password\"\n            required\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Log In\n        </button>\n      </form>\n    </div>\n  );\n}"],"names":["LoginView","dispatch","useDispatch","_useState","useState","email","password","_useState2","_slicedToArray","form","setForm","handleChange","event","_event$currentTarget","currentTarget","name","value","prevForm","_objectSpread","_defineProperty","_jsxs","className","styles","children","_jsx","onSubmit","preventDefault","authOperations","type","pattern","title","placeholder","required","onChange"],"sourceRoot":""}